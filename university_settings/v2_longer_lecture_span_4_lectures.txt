# ======================================================================
# GENERAL
# ======================================================================
Scenario.name = University_FMI
Scenario.nrofHostGroups = 1
Scenario.endTime = 86400
Scenario.updateInterval = 0.5
Scenario.simulateConnections = false
MovementModel.worldSize = 300,300
Events.nrof = 0

myInterface.type = SimpleBroadcastInterface
myInterface.transmitRange = 0
myInterface.transmitSpeed = 0

Group1.groupID = x
Group1.nrofInterfaces = 1
Group1.interface1 = myInterface
Group1.router = PassiveRouter

# number of students
Group1.nrofHosts = 1000

# university map data
NodeGridMovementModel.rasterInterval = 1
NodeGridMovementModel.projectionLatitude = 48.26225591888
NodeGridMovementModel.osmLevel0 = data/FMI/fmi0.osm
NodeGridMovementModel.osmLevel1 = data/FMI/fmi1.osm
NodeGridMovementModel.osmLevel2 = data/FMI/fmi2.osm
NodeGridMovementModel.osmLevel3 = data/FMI/fmi3.osm

# ======================================================================
# SCHEDULE ALGORITHM
# ======================================================================
Group1.movementModel = university.v2.UniversityMovement

# ======================================================================
# SCHEDULE ALGORITHM: DETAILS
# ======================================================================

# Mean number of lectures per student per day
# Variance is determined by the number of lecture slots per day ~(lastLecturesStart - firstLecturesStart, LectureLength)
Group1.universityMeanLecturesPerStudent = 4

# Magic number for adding randomness to A* path finding heuristic
# Uses folded normal distribution for discounting path costs
# The value is the variance of the folded normal distribution in meters
Group1.universityPathRandomness = 3

# factor for distorting the point to point distance to a more realistic walking distance
# 0 -> no distortion at all, direct point to point distance
# 1 -> path distorted to zig-zag line, i.e., walking forward, turning 90 degree, walking forward, turning 90 degree, ...
# A too small distortion means students will come in late
# A too big distortion means students will come in early
Group1.universityDistanceEstimateDistortion = 1

# Determines the temporal spread of a group, e.g. when all students leave a lecture hall at the same time
# Variance of a normal distribution in seconds
Group1.universityTemporalSpread = 120

# lecture length
University.firstLecturesStart = 07:30
University.lastLecturesStart = 20:30
University.lectureLength = 90

# average time between lectures in minutes
University.exerciseRoom_small_timeBetweenBookings = 2880
University.exerciseRoom_medium_timeBetweenBookings = 2880
University.exerciseRoom_large_timeBetweenBookings = 200

University.lectureHall_small_timeBetweenBookings = 30
University.lectureHall_medium_timeBetweenBookings = 30
University.lectureHall_large_timeBetweenBookings = 30

# average stay time in minutes
University.studyPlace_small_stayTime = 30
University.studyPlace_medium_stayTime = 60
University.studyPlace_large_stayTime = 90

University.collectionArea_small_stayTime = 15
University.collectionArea_medium_stayTime = 60
University.collectionArea_large_stayTime = 120

# point of interest capacities
University.lectureHall_small_capacity = 100
University.lectureHall_medium_capacity = 250
University.lectureHall_large_capacity = 600

University.exerciseRoom_small_capacity = 30
University.exerciseRoom_medium_capacity = 30
University.exerciseRoom_large_capacity = 50

University.studyPlace_small_capacity = 10
University.studyPlace_medium_capacity = 50
University.studyPlace_large_capacity = 200

University.collectionArea_small_capacity = 15
University.collectionArea_medium_capacity = 100
University.collectionArea_large_capacity = 500

# ======================================================================
# REPORTS
# ======================================================================

Report.warmup = 0
Report.reportDir = reports

Report.nrofReports = 6
Report.report1 = university.NodeDensityReportLayer0
Report.report2 = university.NodeDensityReportLayer1
Report.report3 = university.NodeDensityReportLayer2
Report.report4 = university.NodeDensityReportLayer3
Report.report5 = NodeDensityReport
Report.report6 = BasicMetricsReport

NodeDensityReportLayer0.xCount = 100
NodeDensityReportLayer0.yCount = 100

NodeDensityReportLayer1.xCount = 100
NodeDensityReportLayer1.yCount = 100

NodeDensityReportLayer2.xCount = 100
NodeDensityReportLayer2.yCount = 100

NodeDensityReportLayer3.xCount = 100
NodeDensityReportLayer3.yCount = 100

NodeDensityReport.xCount = 100
NodeDensityReport.yCount = 100
